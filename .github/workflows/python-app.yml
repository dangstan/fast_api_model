# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Workflow

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Remove last one line from Dockerfile
        run: tail -n 1 Dockerfile | xargs -I {} sed -i '$ d' Dockerfile
        
      - name: Replace 'install dvc' with 'install (dvc' in Dockerfile
        run: sed -i 's/\install dvc/\install (dvc/g' Dockerfile

      - name: Replace 'dvc' with '#dvc' in Dockerfile
        run: sed -i 's/\dvc/\#dvc/g' Dockerfile

      - name: Replace '##dvc' with 'dvc' in Dockerfile
        run: sed -i 's/\##dvc/\dvc/g' Dockerfile
      
      - name: Replace ' (#dvc' with ' dvc' in Dockerfile
        run: sed -i 's/\ (#dvc/\ dvc/g' Dockerfile

      - name: Remove etc lines from Dockerfile
        run: sed -i '/etc/d' Dockerfile
      
      - name: Replace "#flake8" by "flake8" in Dockerfile
        run: sed -i 's/\#flake8/\ flake8/g' Dockerfile

      - name: Remove RUN lines from Dockerfile
        run: sed -i '/RUN/d' Dockerfile

      - name: Build Docker image
        run: docker build --build-arg AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} --build-arg AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} -t my-image .

      - name: Run Docker image
        run: docker run -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} my-image
